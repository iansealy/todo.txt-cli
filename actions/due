#!/usr/bin/env bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    due [TERM...]"
    echo "      Display all tasks with a due date that contain TERM(s) grouped"
    echo "      by due date."
    echo ""
    exit
}

TODOTXT_VERBOSE=0

YESTERDAY=`date -v-1d +%F`
TODAY=`date +%F`
TOMORROW=`date -v+1d +%F`

REGEXP='due:[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}'

past_list=
yesterday_list=
today_list=
tomorrow_list=
future_list=

while read line
do
    due=$(echo "$line" | grep -o -E "$REGEXP" | sed -e 's/^due://')
    if [[ "$due" = "$TODAY" ]]; then
        today_list+="$line\n"
    elif [[ "$due" = "$YESTERDAY" ]]; then
        yesterday_list+="$line\n"
    elif [[ "$due" = "$TOMORROW" ]]; then
        tomorrow_list+="$line\n"
    elif [[ "$due" < "$YESTERDAY" ]]; then
        past_list+="$line\n"
    elif [[ "$due" > "$TOMORROW" ]]; then
        future_list+="$line\n"
    fi
done < <(_list "$TODO_FILE" "$@" | grep -E "$REGEXP")

sortDueList()
{
    list="$1"

    prefixed_list=
    i=0

    while read line
    do
        if [[ -n "$line" ]]; then
            due=$(echo "$line" | grep -o -E "$REGEXP")
            ((i++))
            prefixed_list+="$due $i $line\n"
        fi
    done < <(echo -e "$list")

    echo -ne "$prefixed_list" | sort -f -n | sed -E "s/^$REGEXP [[:digit:]]+ //"
}

past_list=$(sortDueList "$past_list")
future_list=$(sortDueList "$future_list")

showDueList()
{
    list="$1"
    name="$2"

    if [[ -n "$list" && "$list" != "\n" ]]; then
        echo -e "\n---  $name  ---"
        echo -ne "$list"
    fi
}

echo "=====  Due  ====="
showDueList "$past_list\n" "  Past   "
showDueList "$yesterday_list" "Yesterday"
showDueList "$today_list" "  Today  "
showDueList "$tomorrow_list" "Tomorrow "
showDueList "$future_list\n" " Future  "
